package message_queueing;

option go_package="./queueing";

message RawQueueMessage {
  required bytes rawMessage = 1;
  map<string, string> attributes = 2;
}

message QueueMessage {
  required bytes data = 1;
  required string messageID = 2;
  required int64 timestamp = 3;
  required bytes dataHash = 4;
  map<string, string> attributes = 5;
}

message SubmitReceipt {
  required bool ok = 1;
  required string messageID = 2;
  optional string reason = 3;
  optional int64 timestamp = 4;
  optional bytes dataHash = 5;
}

message SubmitMessagesRequest {
  required string queueID = 1;
  repeated RawQueueMessage messages = 2;
}

message SubmitMessagesResponse {
  repeated SubmitReceipt receipts = 1;
}

message RetrieveMessagesRequest {
  required int32 count = 1;
}

message RetrieveMessagesResponse {
  required int32 count = 1;
  repeated QueueMessage messages = 2;
}

message AcknowledgeMessagesRequest {}
message AcknowledgeMessagesResponse {}

service QueueService {
  rpc SubmitMessages(SubmitMessagesRequest) returns (SubmitMessagesResponse);
  rpc RetrieveMessages(RetrieveMessagesRequest) returns (RetrieveMessagesResponse);
  rpc AcknowledgeMessages(AcknowledgeMessagesRequest) returns (AcknowledgeMessagesResponse);
}
